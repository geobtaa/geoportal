<%- # requires solr_config local passed in
  field_config = range_config(field_name)
  label = facet_field_label(field_name)

  input_label_range_begin = field_config[:input_label_range_begin] || t("blacklight.range_limit.range_begin", field_label: label)
  input_label_range_end   = field_config[:input_label_range_end] || t("blacklight.range_limit.range_end", field_label: label)
  maxlength = field_config[:maxlength]
-%>

<div class="limit_content range_limit">
  <% if has_selected_range_limit?(field_name) %>
    <ul class="current list-unstyled facet-values">
      <li class="selected">
        <span class="facet-label">
          <span class="selected"><%= range_display(field_name) %></span>
           <%= link_to remove_range_param(field_name), :class=>"remove", :title => t('blacklight.range_limit.remove_limit') do %>
            <span class="glyphicon glyphicon-remove"></span>
            <span class="sr-only">[<%= t('blacklight.range_limit.remove_limit') %>]</span>
           <% end %>
        </span>
        <span class="selected facet-count"><%= number_with_delimiter(@response.total) %></span>
      </li>
    </ul>

  <% end %>

  <% unless selected_missing_for_range_limit?(field_name) %>
    <%= form_tag search_action_path, :method => :get, class: [BlacklightRangeLimit.classes[:form], "range_#{field_name}"].join(' ') do %>

      <%= render Blacklight::HiddenSearchStateComponent.new(params: search_state.params_for_search.except(:page).to_h) %>

      <!-- we need to include a dummy search_field parameter if none exists,
           to trick blacklight into displaying actual search results instead
           of home page. Not a great solution, but easiest for now. -->
      <% unless params.has_key?(:search_field) %>
        <%= hidden_field_tag("search_field", "dummy_range") %>
      <% end %>

      <%= render_range_input(field_name, :begin, input_label_range_begin, maxlength) %> â€“ <%= render_range_input(field_name, :end, input_label_range_end, maxlength) %>
      <%= submit_tag t('blacklight.range_limit.submit_limit'), class: BlacklightRangeLimit.classes[:submit] %>
    <% end %>
  <% end %>
</div>
