{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {\n  node,\n  func,\n  oneOfType,\n  string,\n  array,\n  bool,\n  instanceOf\n} from 'prop-types'\n\nconst cache = {}\nconst imgPropTypes = {\n  loader: node,\n  unloader: node,\n  decode: bool,\n  crossorigin: string,\n  src: oneOfType([string, array]),\n  container: func,\n  loaderContainer: func,\n  unloaderContainer: func\n}\n\nif (process.env.NODE_ENV != 'production' && process.env.NODE_ENV != 'test') {\n  imgPropTypes.containermockImage = instanceOf(Image) //used for testing only\n}\n\nclass Img extends Component {\n  static propTypes = imgPropTypes\n\n  static defaultProps = {\n    loader: false,\n    unloader: false,\n    decode: true,\n    src: [],\n    // by default, just return what gets sent in. Can be used for advanced rendering\n    // such as animations\n    container: x => x\n  }\n\n  constructor(props) {\n    super(props)\n\n    // default loader/unloader container to just container. If no container was set\n    // this will be a noop\n    this.loaderContainer = props.loaderContainer || props.container\n    this.unloaderContainer = props.unloaderContainer || props.container\n\n    this.sourceList = this.srcToArray(this.props.src)\n\n    // check cache to decide at which index to start\n    for (let i = 0; i < this.sourceList.length; i++) {\n      // if we've never seen this image before, the cache wont help.\n      // no need to look further, just start loading\n      /* istanbul ignore else */\n      if (!(this.sourceList[i] in cache)) break\n\n      // if we have loaded this image before, just load it again\n      /* istanbul ignore else */\n      if (cache[this.sourceList[i]] === true) {\n        this.state = {currentIndex: i, isLoading: false, isLoaded: true}\n        return\n      }\n    }\n\n    this.state = this.sourceList.length\n      ? // 'normal' opperation: start at 0 and try to load\n        {currentIndex: 0, isLoading: true, isLoaded: false}\n      : // if we dont have any sources, jump directly to unloaded\n        {isLoading: false, isLoaded: false}\n  }\n\n  srcToArray = src => (Array.isArray(src) ? src : [src]).filter(x => x)\n\n  onLoad = () => {\n    cache[this.sourceList[this.state.currentIndex]] = true\n    /* istanbul ignore else */\n    if (this.i) this.setState({isLoaded: true})\n  }\n\n  onError = () => {\n    cache[this.sourceList[this.state.currentIndex]] = false\n    // if the current image has already been destroyed, we are probably no longer mounted\n    // no need to do anything then\n    /* istanbul ignore else */\n    if (!this.i) return false\n\n    // before loading the next image, check to see if it was ever loaded in the past\n    for (\n      var nextIndex = this.state.currentIndex + 1;\n      nextIndex < this.sourceList.length;\n      nextIndex++\n    ) {\n      // get next img\n      let src = this.sourceList[nextIndex]\n\n      // if we have never seen it, its the one we want to try next\n      if (!(src in cache)) {\n        this.setState({currentIndex: nextIndex})\n        break\n      }\n\n      // if we know it exists, use it!\n      if (cache[src] === true) {\n        this.setState({\n          currentIndex: nextIndex,\n          isLoading: false,\n          isLoaded: true\n        })\n        return true\n      }\n\n      // if we know it doesn't exist, skip it!\n      /* istanbul ignore else */\n      if (cache[src] === false) continue\n    }\n\n    // currentIndex is zero bases, length is 1 based.\n    // if we have no more sources to try, return - we are done\n    if (nextIndex === this.sourceList.length)\n      return this.setState({isLoading: false})\n\n    // otherwise, try the next img\n    this.loadImg()\n  }\n\n  loadImg = () => {\n    if (process.env.NODE_ENV != 'production') {\n      this.i = this.props.mockImage || new Image()\n    } else {\n      this.i = new Image()\n    }\n    this.i.src = this.sourceList[this.state.currentIndex]\n\n    if (this.props.crossorigin) {\n      this.i.crossOrigin = this.props.crossorigin\n    }\n\n    if (this.props.decode && this.i.decode) {\n      this.i\n        .decode()\n        .then(this.onLoad)\n        .catch(this.onError)\n    } else {\n      this.i.onload = this.onLoad\n      this.i.onerror = this.onError\n    }\n  }\n\n  unloadImg = () => {\n    this.i.onerror = null\n    this.i.onload = null\n\n    // abort any current downloads https://github.com/mbrevda/react-image/pull/223\n    this.i.src = ''\n\n    try {\n      delete this.i.src\n    } catch (e) {\n      // On Safari in Strict mode this will throw an exception,\n      //  - https://github.com/mbrevda/react-image/issues/187\n      // We don't need to do anything about it.\n    }\n    delete this.i\n  }\n\n  componentDidMount() {\n    // kick off process\n    /* istanbul ignore else */\n    if (this.state.isLoading) this.loadImg()\n  }\n\n  componentWillUnmount() {\n    // ensure that we dont leave any lingering listeners\n    /* istanbul ignore else */\n    if (this.i) this.unloadImg()\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.loaderContainer = nextProps.loaderContainer || nextProps.container\n    this.unloaderContainer = nextProps.unloaderContainer || nextProps.container\n\n    let src = this.srcToArray(nextProps.src)\n\n    let srcAdded = src.filter(s => this.sourceList.indexOf(s) === -1)\n    let srcRemoved = this.sourceList.filter(s => src.indexOf(s) === -1)\n\n    // if src prop changed, restart the loading process\n    if (srcAdded.length || srcRemoved.length) {\n      this.sourceList = src\n\n      // if we dont have any sources, jump directly to unloader\n      if (!src.length) return this.setState({isLoading: false, isLoaded: false})\n      this.setState(\n        {currentIndex: 0, isLoading: true, isLoaded: false},\n        this.loadImg\n      )\n    }\n  }\n\n  render() {\n    // set img props as rest\n    const {\n      container,\n      loader,\n      unloader,\n\n      // props to exclude from the rest property\n      src,\n      decode,\n      loaderContainer,\n      unloaderContainer,\n      mockImage,\n\n      ...rest\n    } = this.props //eslint-disable-line\n\n    // if we have loaded, show img\n    if (this.state.isLoaded) {\n      const imgProps = {\n        ...{src: this.sourceList[this.state.currentIndex]},\n        ...rest\n      }\n\n      return container(<img {...imgProps} />)\n    }\n\n    // if we are still trying to load, show img and a loader if requested\n    if (!this.state.isLoaded && this.state.isLoading) {\n      return loader ? this.loaderContainer(loader) : null\n    }\n\n    // if we have given up on loading, show a place holder if requested, or nothing\n    /* istanbul ignore else */\n    if (!this.state.isLoaded && !this.state.isLoading) {\n      return unloader ? this.unloaderContainer(unloader) : null\n    }\n  }\n}\n\nexport default Img\n"],"names":["cache","imgPropTypes","loader","node","unloader","decode","bool","crossorigin","string","src","oneOfType","array","container","func","loaderContainer","unloaderContainer","Img","props","Array","isArray","filter","x","_this","sourceList","state","currentIndex","i","setState","isLoaded","nextIndex","length","isLoading","loadImg","Image","crossOrigin","then","onLoad","onError","onload","onerror","e","srcToArray","unloadImg","nextProps","srcAdded","s","_this2","indexOf","srcRemoved","mockImage","rest","imgProps","React","Component","propTypes"],"mappings":"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"}